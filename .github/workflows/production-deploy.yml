name: Production Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Update CHANGELOG.md from PR title (only on PR)
      - name: Append PR title to CHANGELOG.md
        if: github.event_name == 'pull_request'
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          DATE=$(date -u +"%Y-%m-%d")
      
          echo -e "## ${DATE}\n- ${PR_TITLE}\n" >> CHANGELOG.md

      # Step 4: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Security and Quality Checks
      - name: Run Safety (Dependency Vulnerability Scan)
        run: |
          pip install safety
          safety check --json --output safety-report.json || true
          echo "Safety scan completed"

      - name: Run Bandit (Security Linting)
        run: |
          pip install bandit
          bandit -r app/ -f json -o bandit-report.json || true
          echo "Bandit scan completed"

      # Step 6: Code Quality Checks
      - name: Run linting with flake8
        run: |
          flake8 app/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run code formatting check with black
        run: |
          black --check --diff app/ tests/

      # Step 7: Run Tests
      - name: Run tests
        env:
          DATABASE_URL: sqlite:///test.db
          SECRET_KEY: test-secret-key
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest tests/ -v --tb=short --cov=app --cov-report=xml --cov-report=term-missing

      # Step 8: Azure Login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 9: Deploy to Azure App Service (Production)
      - name: Deploy to Azure App Service (Production)
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'taskflow-app-new'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .

      # Step 10: Deployment Complete
      - name: Deployment Complete
        run: |
          echo "âœ… Production deployment completed successfully!"
          echo "Application deployed to: https://taskflow-app-new.azurewebsites.net"
          echo "Health check: https://taskflow-app-new.azurewebsites.net/health" 