name: Staging Deployment Pipeline

on:
  push:
    branches:
      - develop

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Security and Quality Checks
      - name: Run Safety (Dependency Vulnerability Scan)
        run: |
          pip install safety
          safety check --json --output safety-report.json || true
          echo "Safety scan completed"

      - name: Run Bandit (Security Linting)
        run: |
          pip install bandit
          bandit -r app/ -f json -o bandit-report.json || true
          echo "Bandit scan completed"

      # Step 5: Code Quality Checks
      - name: Run linting with flake8
        run: |
          flake8 app/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run code formatting check with black
        run: |
          black --check --diff app/ tests/

      # Step 6: Run Tests
      - name: Run tests
        env:
          DATABASE_URL: sqlite:///test.db
          SECRET_KEY: test-secret-key
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest tests/ -v --tb=short --cov=app --cov-report=xml --cov-report=term-missing

      # Step 7: Azure Login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 8: Test Azure Connection
      - name: Test Azure Connection
        run: |
          az account show
          az webapp list --resource-group taskflow-rg

      # Step 9: Restart App Service (Fix Deployment Conflicts)
      - name: Restart App Service
        run: |
          echo "Restarting App Service to resolve deployment conflicts..."
          az webapp restart --resource-group taskflow-rg --name taskflow-staging-new
          sleep 30

      # Step 10: Deploy to Azure App Service (Staging)
      - name: Deploy to Azure App Service (Staging)
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'taskflow-staging-new'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
          package: .
        continue-on-error: true

      # Step 11: Retry Deployment if Failed
      - name: Retry Deployment if Failed
        if: failure()
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'taskflow-staging-new'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
          package: .

      # Step 12: Deployment Complete
      - name: Deployment Complete
        run: |
          echo "âœ… Staging deployment completed successfully!"
          echo "Application deployed to: https://taskflow-staging-new.azurewebsites.net"
          echo "Health check: https://taskflow-staging-new.azurewebsites.net/health" 