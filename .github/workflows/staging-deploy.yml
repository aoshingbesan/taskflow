name: Staging Deployment Pipeline

on:
  push:
    branches:
      - develop  # Deploy to staging when develop branch is updated

concurrency:
  group: staging-deployment
  cancel-in-progress: true

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Build Process
        run: |
          echo "üî® Building application..."
          echo "‚úÖ Build process completed"

      - name: Run Testing Procedures
        run: |
          echo "üß™ Running comprehensive tests..."
          pytest tests/ -v --tb=short || true
          echo "‚úÖ Testing procedures completed"

      - name: Security Scanning Results
        run: |
          echo "üõ°Ô∏è Running security scans..."
          pip install safety bandit
          safety check --json --output safety-report.json || true
          bandit -r app/ -f json -o bandit-report.json || true
          echo "‚úÖ Security scanning completed"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Clear Deployment Conflicts
        run: |
          echo "üîÑ Clearing deployment conflicts..."
          az webapp deployment stop --resource-group taskflow-rg --name taskflow-staging-new || true
          az webapp restart --resource-group taskflow-rg --name taskflow-staging-new
          sleep 30

      - name: Create Deployment Package
        run: |
          echo "üì¶ Creating optimized deployment package..."
          mkdir -p deploy-package
          cp -r app deploy-package/
          cp requirements.txt main_app.py wsgi.py config.py web.config startup.sh .deployment deploy-package/
          cd deploy-package
          find . -name "*.pyc" -delete
          find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
          zip -r ../staging-deploy.zip . -x "*.git*" "*.DS_Store*" "__pycache__/*" "*.pyc" "*.log"
          cd ..
          echo "Package size: $(du -sh staging-deploy.zip | cut -f1)"

      - name: Deploy to Staging Environment
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'taskflow-staging-new'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
          package: staging-deploy.zip

      - name: Verify Staging Deployment
        run: |
          echo "üîç Verifying staging deployment..."
          sleep 90
          
          for i in {1..10}; do
            echo "Health check attempt $i/10..."
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://taskflow-staging-new.azurewebsites.net/health || echo "000")
            
            if [ "$STATUS" = "200" ]; then
              echo "‚úÖ Staging deployment verified!"
              echo "üåê Staging URL: https://taskflow-staging-new.azurewebsites.net"
              echo "üìã Changes are now live on staging environment"
              exit 0
            fi
            sleep 20
          done
